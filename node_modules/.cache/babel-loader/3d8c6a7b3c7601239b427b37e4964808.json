{"ast":null,"code":"var _jsxFileName = \"/Users/csuftitan/Desktop/project_corona_tracker-master/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n      console.log(dailyData.map);\n    };\n\n    fetchMyAPI();\n  }, []);\n  console.log(recovered);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(164, 204, 52, 1)', 'rgba(135, 0, 0, 1)', 'rgba(0, 0, 0, 1)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Country selected: ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: 'rgba(164, 204, 52, 1)',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.recovered),\n        label: 'Recovered',\n        borderColor: 'rgba(135, 0, 0, 1)',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'black',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/csuftitan/Desktop/project_corona_tracker-master/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchMyAPI","initialDailyData","console","log","map","barChart","labels","datasets","label","backgroundColor","value","legend","display","title","text","lineChart","date","borderColor","fill","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,SAASC,cAAT,QAA+B,WAA/B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AACrE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,YAAY;AAC7B,YAAMC,gBAAgB,GAAG,MAAMX,cAAc,EAA7C;AAEAS,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACM,GAAtB;AACD,KALD;;AAOAJ,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT;AAUAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACA,QAAMU,QAAQ,GACZX,SAAS,gBACP,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJY,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEC,QAAAA,eAAe,EAAE,CAAC,uBAAD,EAA0B,oBAA1B,EAAgD,kBAAhD,CAFnB;AAGEhB,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACgB,KAAX,EAAkBf,SAAS,CAACe,KAA5B,EAAmCd,MAAM,CAACc,KAA1C;AAHR,OADQ;AAFN,KADR;AAWE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,qBAAoBjB,OAAQ;AAApD;AAFA,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAiBL,IAlBN;AAqBA,QAAMkB,SAAS,GACbjB,SAAS,CAAC,CAAD,CAAT,gBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJQ,MAAAA,MAAM,EAAER,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEY,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJT,MAAAA,QAAQ,EAAE,CAAC;AACTd,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAeX,IAAD,IAAUA,IAAI,CAACC,SAA7B,CADG;AAETc,QAAAA,KAAK,EAAE,UAFE;AAGTS,QAAAA,WAAW,EAAE,uBAHJ;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,EAKP;AACDzB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAeX,IAAD,IAAUA,IAAI,CAACE,SAA7B,CADL;AAEDa,QAAAA,KAAK,EAAE,WAFN;AAGDS,QAAAA,WAAW,EAAE,oBAHZ;AAIDC,QAAAA,IAAI,EAAE;AAJL,OALO,EAUP;AACDzB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAeX,IAAD,IAAUA,IAAI,CAACG,MAA7B,CADL;AAEDY,QAAAA,KAAK,EAAE,QAFN;AAGDS,QAAAA,WAAW,EAAE,OAHZ;AAIDR,QAAAA,eAAe,EAAE,oBAJhB;AAKDS,QAAAA,IAAI,EAAE;AALL,OAVO;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAwBI,IAzBN;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,OAAO,GAAGQ,QAAH,GAAcU,SADxB,CADF;AAKD,CApED;;AAsEA,eAAevB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      \n      setDailyData(initialDailyData);\n      console.log(dailyData.map)\n    };\n\n    fetchMyAPI();\n  }, []);\n  console.log(recovered)\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(164, 204, 52, 1)', 'rgba(135, 0, 0, 1)', 'rgba(0, 0, 0, 1)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Country selected: ${country}`},\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: 'rgba(164, 204, 52, 1)',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.recovered),\n            label: 'Recovered',\n            borderColor: 'rgba(135, 0, 0, 1)',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'black',\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}